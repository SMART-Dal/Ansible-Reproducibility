---
- name: Establish some role-related facts
  ansible.builtin.set_fact:
    mongodb_major_version: "{{ mongodb_version[0:3] | string }}"
    mongodb_apt_url: "{{ mongodb_apt_ubuntu_url if ansible_distribution == 'Ubuntu' else mongodb_apt_debian_url }}"

- name: Add mongodb gpg key
  ansible.builtin.get_url:
    url: "{{ mongodb_apt_key_url }}"
    dest: /etc/apt/trusted.gpg.d/mongodb.asc
    mode: 0644
    force: true

- name: Fail when used wrong mongodb_version variable
  ansible.builtin.fail:
    msg: "mongodb_version is not defined"
  when: >
    mongodb_package == 'mongodb-org' and
    mongodb_version is not defined

- name: Show apt url
  ansible.builtin.debug:
    msg: "mongodb_apt_url = {{ mongodb_apt_url }}"

- name: Ensure apt sources list for mongodb.org sources is present
  ansible.builtin.apt_repository:
    repo: '{{ mongodb_apt_url }}'
    update_cache: true
  when: mongodb_package == 'mongodb-org'

- name: Apt cache update - does not work with ansible.builtin.apt_repository
  ansible.builtin.apt:
    update_cache: true
  when: mongodb_package == 'mongodb-org'

- name: Install MongoDB package
  ansible.builtin.apt:
    name: "{{ item }}{% if (mongodb_version | length > 3) %}={{ mongodb_version }}{% endif %}"
  loop:
    - "{{ mongodb_package }}"
    - "{{ mongodb_package }}-database-tools-extra"
    - "{{ mongodb_package }}-mongos"
    - "{{ mongodb_package }}-server"
    - "{{ mongodb_package }}-shell"
    - "{{ mongodb_package }}-tools"
  notify: Restart mongodb

- name: Check if NUMA is available on host
  ansible.builtin.command: "ls -1 /proc/1/numa_maps"
  register: numa_available
  ignore_errors: true
  changed_when: false
  check_mode: false
  when: mongodb_use_numa | bool

- name: Don't use NUMA if it is unavailable on host
  ansible.builtin.set_fact:
    mongodb_use_numa: false
  when:
    - mongodb_use_numa | bool
    - numa_available.rc != 0

- name: Install numactl package
  ansible.builtin.apt:
    name: numactl
    state: present
  when: mongodb_use_numa | bool

- name: Add systemd configuration if present
  ansible.builtin.template:
    src: systemd/mongodb.service.j2
    dest: /lib/systemd/system/{{ mongodb_daemon_name }}.service
    mode: 0644
  when:
    - mongodb_manage_systemd_unit | bool
  notify:
    - Reload systemd daemon

- name: Add symlink for systemd
  ansible.builtin.file:
    src: /lib/systemd/system/{{ mongodb_daemon_name }}.service
    dest: /etc/systemd/system/multi-user.target.wants/{{ mongodb_daemon_name }}.service
  when:
    - mongodb_manage_systemd_unit | bool
  notify:
    - Reload systemd daemon

- name: Install PyMongo package
  ansible.builtin.apt:
    name: "{{ mongodb_pymongo_package }}"
  when: not mongodb_pymongo_from_pip

- name: Using pip
  when: mongodb_pymongo_from_pip
  block:
    - name: Include python role
      ansible.builtin.include_role:
        name: alphanodes.setup.python
      vars:
        python_pip_packages: '{{ mongodb_pymongo_pip_packages }}'
