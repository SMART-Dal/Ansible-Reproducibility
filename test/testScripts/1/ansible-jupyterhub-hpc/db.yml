# Copyright 2022 IDRIS / jupyter
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

# Setup PostgresSQL database for grafana

- block:
  - name: check if PostgreSQL database is initialised
    stat:
      path: "{{ postgresql_data_dir }}/pg_hba.conf"
    register: pgsql_stat

  - name: initialise PostgreSQL database
    command: "{{ postgresql_init_cmd }}"
    args:
      creates: "{{ postgresql_data_dir }}/pg_hba.conf"
    become_user: postgres
    when: not pgsql_stat.stat.exists

  - name: use md5 as authentication method for databases on localhost
    lineinfile:
      dest: "{{ postgresql_data_dir }}/pg_hba.conf"

      insertafter: "^local   all             all                                     peer"
      line: "{{ item }}"
    with_items:
      - "host    grafana     grafana               ::1/128               md5"
      - "host    grafana     grafana             127.0.0.1/32            md5"
  become: true

- name: restart postgresql
  service:
    name: postgresql
  become: true
  tags:
    - molecule-idempotence-notest

- name: create the database for grafana
  postgresql_db:
    name: "grafana"
    template: "template0"

  become: true
  become_user: postgres

- name: ensure user has access to the new database
  postgresql_user:
     db: "grafana"
     name: "grafana"
     password: "{{ lookup('file', local_passwds_dir + '/grafana_db_passwd') | trim }}"
     priv: ALL

  become: true
  become_user: postgres

- name: ensure user does not have unnecessary permissions
  postgresql_user:
     name: "grafana"
     role_attr_flags: NOSUPERUSER,NOCREATEDB

  become: true
  become_user: postgres

- name: setup grafana db conn string
  set_fact:
    grafana_database:
      type: "postgres"
      host: "localhost:5432"
      name: "grafana"
      user: "grafana"
      password: "{{ lookup('file', local_passwds_dir + '/grafana_db_passwd') | trim }}"
