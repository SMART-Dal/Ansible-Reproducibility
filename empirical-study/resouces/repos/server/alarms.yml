---
- name: prepare netdata alarm templates
  ansible.builtin.copy:
    src: "/usr/lib/netdata/conf.d/health.d/{{ file }}.conf"
    dest: /etc/netdata/health.d/
    remote_src: true
    force: "{{ reset_file or global_reset }}"
    mode: 0644
  vars:
    file: "{{ item |regex_replace('^_') }}"
    reset_file: "{{ item.startswith('_') }}"
    global_reset: "{{ srv_netdata_reset_alarms |d(false) |bool }}"
  loop: "{{ srv_netdata_alarms.keys() |map('regex_replace','[.].*$') |unique |sort }}"
  loop_control:
    label: "{{ file }}.conf"

- name: customize netdata alarms
  ## use a special version of lineinfile module, which
  ## honors `regexp`, `backrefs`, and `insertafter` together.
  ivansible.server.lineinfile_netdata:
    path: "/etc/netdata/health.d/{{ file }}.conf"
    regexp: '^(\s*)({{ key }}):'
    line: '\1{{ key }}: {{ val }}'
    backrefs: true
    insertafter: '^\s*(alarm|template): {{ alarm }}\s*$'
    firstmatch: true
  tags: skip_ansible_lint
  notify: reload netdata alarms
  loop: "{{ srv_netdata_alarms |dictsort }}"
  loop_control:
    label: "{{ file }}.{{ alarm }}.{{ key }}"
  when: val |d('')
  vars:
    desc: "{{ item.0.split('.') }}"
    file: "{{ desc.0 |regex_replace('^_') }}"
    alarm: "{{ desc.1 }}"
    key: "{{ desc.2 }}"
    val: "{{ item.1 }}"
...
