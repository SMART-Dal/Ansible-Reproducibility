# Copyright 2022 IDRIS / jupyter
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

- name: create node list of compute nodes of HPC platform
  copy:
    src: "{{ playbook_dir }}/files/nodelist.txt"
    dest: "{{ jupyterhub_srv_dir }}/nodelist.txt"
    owner: "{{ jupyterhub_system_user }}"
    group: "{{ jupyterhub_system_group }}"
    mode: 0644
  become: true

# We need to restart jupyterhub service when we make changes
# to configuration. Here we do that as a task only if the
# service file exists. We should skip this task when service file
# does not exist which can be case when we are installing jupyterhub
# for the first time
- name: check /etc/systemd/system/jupyterhub.service exists
  stat:
    path: "/etc/systemd/system/jupyterhub.service"
  register: jh_service_file

- name: install jupyterhub config file
  template:
    src: jupyterhub_config.py.j2
    dest: "{{ jupyterhub_config_dir }}/jupyterhub_config.py"
    mode: 0644
  become: true

- name: install jupyter config file
  template:
    src: jupyter_notebook_config.py.j2
    dest: "{{ jupyter_config_dir }}/jupyter_notebook_config.py"
    mode: 0644
  become: true
  
- name: check if internal certs directory exists for JupyterHub
  stat:
    path: "{{ jupyterhub_internal_certs_dir }}"
  register: certs_dir
  become: true

- name: create TLS certs for internal communication of JupyterHub
  shell: "{{ jupyterhub_env_bin_path }}/jupyterhub --generate-certs -f {{ jupyterhub_config_dir }}/jupyterhub_config.py && chown -R {{ jupyterhub_system_user }}:{{ jupyterhub_system_group }} {{ jupyterhub_internal_certs_dir }}"
  args:
    creates: "{{ jupyterhub_internal_certs_dir }}"
  become: true
  become_user: "{{ jupyterhub_system_user }}"
  when: not certs_dir.stat.exists

- name: restart jupyterhub
  service:
    name: "jupyterhub"
  when: jh_service_file.stat.exists
  tags:
    - molecule-idempotence-notest
